# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#  name: db2svc 
# spec:
#  replicas: 3
#  template:
#    metadata:
#      name: db2svc
#      labels:
#        app: db2svc
#    spec:
#      containers:
#        - name: db2svcluster
#          image: "s4saif/db2:latest"
#          imagePullPolicy: Always
#          env:
#             - name: DB2INST1_PASSWORD
#               value: .7475443aA!
#             - name: LICENSE
#               value: accept
#         #  volumeMounts:
#         #   - name: db2-storage
#         #     mountPath: /home/db2inst1
#          ports:
#           - containerPort: 50000
#      volumes:
#       - name: db2-storage
#         persistentVolumeClaim:
#           claimName: db2-pv-claim
# ---
# apiVersion: v1
# kind: Service
# metadata:
#  name: db2svc 
#  labels:
#    app: db2svc
# spec:
#  type: ClusterIP
#  selector:
#    app: db2svc
#  ports:
#   - protocol: TCP
#     name: db2svc
#     port: 80
#     targetPort: 50000
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: db2-pv-claim
# spec:
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 40Gi


apiVersion: v1
kind: Service
metadata:
  name: db2
  labels:
    app: db2
spec:
  ports:
  - port: 80
    targetPort: 50000
    name: db2
  clusterIP: None
  selector:
    app: db2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db2
spec:
  serviceName: "db2"
  replicas: 1
  selector:
    matchLabels:
      app: db2
  template:
    metadata:
      labels:
        app: db2
    spec:
      containers:
      - name: db2
        image: s4saif/db2:latest
        ports:
        - containerPort: 50000
          name: db2
          imagePullPolicy: Always
          env:
            - name: DB2INST1_PASSWORD
              value: .7475443aA!
            - name: LICENSE
              value: accept
        volumeMounts:
        - name: db2
          mountPath: /home/db2inst1/
  volumeClaimTemplates:
  - metadata:
      name: db2
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi


          kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "secret"}]}' --namespace = default
